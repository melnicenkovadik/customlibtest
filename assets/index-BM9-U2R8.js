import{j as f}from"./jsx-runtime-DR9Q75dM.js";import{r as l}from"./index-DRjF_FHU.js";import{P as _}from"./index-qspcADvA.js";import{c as h}from"./index-BxTXOyjN.js";import{c as C}from"./index-Bb4qSo10.js";function E(e,r=[]){let o=[];function s(u,i){const a=l.createContext(i),n=o.length;o=[...o,i];function d(p){const{scope:c,children:g,...m}=p,V=(c==null?void 0:c[e][n])||a,j=l.useMemo(()=>m,Object.values(m));return f.jsx(V.Provider,{value:j,children:g})}function b(p,c){const g=(c==null?void 0:c[e][n])||a,m=l.useContext(g);if(m)return m;if(i!==void 0)return i;throw new Error(`\`${p}\` must be used within \`${u}\``)}return d.displayName=u+"Provider",[d,b]}const t=()=>{const u=o.map(i=>l.createContext(i));return function(a){const n=(a==null?void 0:a[e])||u;return l.useMemo(()=>({[`__scope${e}`]:{...a,[e]:n}}),[a,n])}};return t.scopeName=e,[s,M(t,...r)]}function M(...e){const r=e[0];if(e.length===1)return r;const o=()=>{const s=e.map(t=>({useScope:t(),scopeName:t.scopeName}));return function(u){const i=s.reduce((a,{useScope:n,scopeName:d})=>{const p=n(u)[`__scope${d}`];return{...a,...p}},{});return l.useMemo(()=>({[`__scope${r.scopeName}`]:i}),[i])}};return o.scopeName=r.scopeName,o}var x="Progress",P=100,[R,K]=E(x),[A,T]=R(x),S=l.forwardRef((e,r)=>{const{__scopeProgress:o,value:s=null,max:t,getValueLabel:u=D,...i}=e;(t||t===0)&&!N(t)&&console.error(L(`${t}`,"Progress"));const a=N(t)?t:P;s!==null&&!$(s,a)&&console.error(O(`${s}`,"Progress"));const n=$(s,a)?s:null,d=v(n)?u(n,a):void 0;return f.jsx(A,{scope:o,value:n,max:a,children:f.jsx(_.div,{"aria-valuemax":a,"aria-valuemin":0,"aria-valuenow":v(n)?n:void 0,"aria-valuetext":d,role:"progressbar","data-state":I(n,a),"data-value":n??void 0,"data-max":a,...i,ref:r})})});S.displayName=x;var w="ProgressIndicator",y=l.forwardRef((e,r)=>{const{__scopeProgress:o,...s}=e,t=T(w,o);return f.jsx(_.div,{"data-state":I(t.value,t.max),"data-value":t.value??void 0,"data-max":t.max,...s,ref:r})});y.displayName=w;function D(e,r){return`${Math.round(e/r*100)}%`}function I(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function v(e){return typeof e=="number"}function N(e){return v(e)&&!isNaN(e)&&e>0}function $(e,r){return v(e)&&!isNaN(e)&&e<=r&&e>=0}function L(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${P}\`.`}function O(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${P} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var q=S,G=y;const X=C("relative overflow-hidden rounded-full transition-all",{variants:{variant:{default:"h-4 w-full bg-secondary",trending:"h-2 w-full bg-red-500"}},defaultVariants:{variant:"default"}}),k=C("h-full w-full flex-1 rounded-full transition-all",{variants:{variant:{default:"bg-foreground",trending:"bg-green-500"}}}),B=l.forwardRef(({className:e,indicatorClassName:r,variant:o="default",value:s,...t},u)=>f.jsx(q,{ref:u,className:h(X({variant:o}),e),...t,children:f.jsx(G,{className:h(k({variant:o}),r),style:{transform:`translateX(-${100-(s||0)}%)`}})}));B.__docgenInfo={description:"",methods:[],displayName:"Progress",props:{variant:{required:!1,tsType:{name:"union",raw:"'default' | 'trending'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'trending'"}]},description:"",defaultValue:{value:"'default'",computed:!1}},indicatorClassName:{required:!1,tsType:{name:"string"},description:""}}};export{B as P};
